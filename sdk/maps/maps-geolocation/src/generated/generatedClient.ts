/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as Parameters from "./models/parameters";
import * as Mappers from "./models/mappers";
import { GeneratedClientContext } from "./generatedClientContext";
import {
  GeneratedClientOptionalParams,
  JsonFormat,
  GeneratedClientGetLocationOptionalParams,
  GeneratedClientGetLocationResponse
} from "./models";

/** @internal */
export class GeneratedClient extends GeneratedClientContext {
  /**
   * Initializes a new instance of the GeneratedClient class.
   * @param options The parameter options
   */
  constructor(options?: GeneratedClientOptionalParams) {
    super(options);
  }

  /**
   * **Applies to**: S0 and S1 pricing tiers.
   *
   *
   * This service will return the ISO country code for the provided IP address. Developers can use this
   * information  to block or alter certain content based on geographical locations where the application
   * is being viewed from.
   * @param format Desired format of the response. Only `json` format is supported.
   * @param ipAddress The IP address. Both IPv4 and IPv6 are allowed.
   * @param options The options parameters.
   */
  getLocation(
    format: JsonFormat,
    ipAddress: string,
    options?: GeneratedClientGetLocationOptionalParams
  ): Promise<GeneratedClientGetLocationResponse> {
    return this.sendOperationRequest(
      { format, ipAddress, options },
      getLocationOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getLocationOperationSpec: coreClient.OperationSpec = {
  path: "/geolocation/ip/{format}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.IpAddressToLocationResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.ipAddress],
  urlParameters: [Parameters.$host, Parameters.format],
  headerParameters: [Parameters.accept, Parameters.clientId],
  serializer
};
