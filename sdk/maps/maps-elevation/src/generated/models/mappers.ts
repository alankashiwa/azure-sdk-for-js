/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const ElevationResult: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ElevationResult",
    modelProperties: {
      elevations: {
        serializedName: "data",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Elevation"
            }
          }
        }
      }
    }
  }
};

export const Elevation: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Elevation",
    modelProperties: {
      coordinate: {
        serializedName: "coordinate",
        type: {
          name: "Composite",
          className: "LatLongPair"
        }
      },
      elevationInMeter: {
        serializedName: "elevationInMeter",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const LatLongPair: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatLongPair",
    modelProperties: {
      latitude: {
        serializedName: "latitude",
        type: {
          name: "Number"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorResponse: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDetail"
        }
      }
    }
  }
};

export const ErrorDetail: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorDetail"
            }
          }
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ErrorAdditionalInfo"
            }
          }
        }
      }
    }
  }
};

export const ErrorAdditionalInfo: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorAdditionalInfo",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      info: {
        serializedName: "info",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "any" } }
        }
      }
    }
  }
};

export const LatLongPairAbbreviated: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "LatLongPairAbbreviated",
    modelProperties: {
      lat: {
        serializedName: "lat",
        type: {
          name: "Number"
        }
      },
      lon: {
        serializedName: "lon",
        type: {
          name: "Number"
        }
      }
    }
  }
};
